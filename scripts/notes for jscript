document.addEventListener('DOMContentLoaded', () => {
    const container = document.querySelector('.temple-container');
    const homeLink = document.getElementsByClassName('.home');
    const oldLink = document.getElementsByClassName('.old');
    const newLink = document.getElementsByClassName('.new');
    const largeLink = document.getElementsByClassName('.large');
    const smallLink = document.getElementsByClassName('.small');


    const displayTemples = (temples) => {
        container.innerHTML = ''; // Clear existing content
        filteredTemples.forEach(temple => {
            const figure = document.createElement('figure');
            figure.classList.add('hover');

            const img = document.createElement('img');
            img.src = temple.imageUrl;
            img.alt = temple.templeName;
            img.loading = "lazy";
            figure.appendChild(img);

            const figcaption = document.createElement('figcaption');
            figcaption.innerHTML = `
                <h3>${temple.templeName}</h3>
                <p>Location: ${temple.location}</p>
                <p>Dedicated: ${formatDate(temple.dedicated)}</p>
                <p>Area: ${temple.area.toLocaleString()} sq ft</p>
            `;
            figure.appendChild(figcaption);

            container.appendChild(figure);
        });
    };

    const formatDate = (dateString) => {
        const date = new Date(dateString);
        const year = date.getFullYear();
        const month = date.toLocaleString('default', { month: 'long' });
        const day = date.getDate();
        return `${year}, ${month}, ${day}`;
    };

    homeLink.addEventListener('click', () => displayTemples(temples));

    oldLink.addEventListener('click', () => {
        const oldTemples = temples.filter(temple => new Date(temple.dedicated).getFullYear() < 1900);
        displayTemples(oldTemples);
    });

    newLink.addEventListener('click', () => {
        const newTemples = temples.filter(temple => new Date(temple.dedicated).getFullYear() > 2000);
        displayTemples(newTemples);
    });

    largeLink.addEventListener('click', () => {
        const largeTemples = temples.filter(temple => temple.area > 90000);
        displayTemples(largeTemples);
    });

    smallLink.addEventListener('click', () => {
        const smallTemples = temples.filter(temple => temple.area < 10000);
        displayTemples(smallTemples);
    });

    // Display all temples by default when the page loads
    displayTemples(temples);
});